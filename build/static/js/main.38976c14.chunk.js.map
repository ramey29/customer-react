{"version":3,"sources":["components/common/pagination.jsx","components/customerList.jsx","utils/paginate.js","components/customerDetail.jsx","services/httpService.js","components/customer.jsx","components/home.jsx","components/notfound.jsx","App.js","index.js"],"names":["Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","i","push","className","map","p","key","onClick","href","CustomerList","state","handlePageChange","page","setState","customers","items","pageNumber","startIndex","slice","paginate","this","props","Fragment","c","_id","onSelect","name","toUpperCase","age","isActive","length","Component","CustomerDetail","selectedCustomer","address","a","index","street","city","country","zip","renderAddress","axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","Customer","handleSelect","customerID","filter","http","data","Home","to","NotFound","App","path","render","additionalProps","exact","component","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.38976c14.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../../css/pagination.css\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pageCount = Math.ceil(itemsCount / pageSize);\n  let pages = [];\n  if (pageCount === 1) return null;\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n  return (\n    <nav className=\"\">\n      <ul className=\"pagination\">\n        {pages.map((p) => (\n          <li key={p} className=\"page-item\">\n            <a\n              className={p === currentPage ? \"page-link active\" : \"page-link\"}\n              onClick={() => {\n                onPageChange(p);\n              }}\n              href=\"#nogo\"\n            >\n              {p}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport \"../css/table.css\";\nimport Pagination from \"../components/common/pagination\";\nimport { paginate } from \"../utils/paginate.js\";\n\nclass CustomerList extends Component {\n  state = { pageSize: 5, currentPage: 1 };\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const customers = paginate(\n      this.props.customers,\n      this.state.currentPage,\n      this.state.pageSize\n    );\n    return (\n      <React.Fragment>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Age</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers.map((c) => (\n              <tr key={c._id} onClick={() => this.props.onSelect(c._id)}>\n                <td>{c.name.toUpperCase()}</td>\n                <td>{c.age}</td>\n                <td>{c.isActive ? \"Active\" : \"Inactive\"}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <Pagination\n          itemsCount={this.props.customers.length}\n          pageSize={this.state.pageSize}\n          onPageChange={this.handlePageChange}\n          currentPage={this.state.currentPage}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CustomerList;\n","export function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  pageSize = pageSize * pageNumber;\n  return items.slice(startIndex, pageSize);\n}\n","import React, { Component } from \"react\";\nimport \"../css/detail.css\";\n\n//stateless functional component\n\nclass CustomerDetail extends Component {\n  state = {};\n  renderAddress() {\n    if (\n      this.props.selectedCustomer[0] &&\n      this.props.selectedCustomer[0].address == null\n    ) {\n      return (\n        <div className=\"no-detail\">\n          There is no address available for{\" \"}\n          {this.props.selectedCustomer[0].name.toUpperCase()}\n        </div>\n      );\n    }\n\n    return this.props.selectedCustomer.map((c) => (\n      <div className=\"detail\" key={c._id}>\n        <div>Name: {c.name.toUpperCase()}</div>\n        {c.address.map((a, index) => (\n          <div key={a._id}>\n            Address {index + 1} :<span>Street: {a.street}, </span>\n            <span>City: {a.city}, </span>\n            <span>State: {a.state}, </span>\n            <span>\n              Country: {a.country} - {a.zip},\n            </span>\n          </div>\n        ))}\n      </div>\n    ));\n  }\n  render() {\n    return <React.Fragment>{this.renderAddress()}</React.Fragment>;\n  }\n}\n\nexport default CustomerDetail;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n// handling unexpected error globally\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"logging error:\", error);\n    alert(\"An unexpected error occoured\");\n  }\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","import React, { Component } from \"react\";\nimport CustomerList from \"./customerList.jsx\";\nimport CustomerDetail from \"./customerDetail.jsx\";\nimport http from \"../services/httpService\";\nimport \"../css/style.css\";\nconst endPoint = \"/customers\";\nclass Customer extends Component {\n  state = {\n    customers: [],\n    selectedCustomer: [],\n    address: [],\n  };\n\n  async componentDidMount() {\n    try {\n      const { data } = await http.get(endPoint);\n      this.setState({ customers: data });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        alert(\"Customer endpoint not found\");\n      }\n    }\n  }\n\n  handleSelect = (customerID) => {\n    console.log(customerID);\n    const selectedCustomer = this.state.customers.filter((c) => {\n      return c._id === customerID;\n    });\n    this.setState({ selectedCustomer: selectedCustomer });\n  };\n  render() {\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"innerContainer\">\n          <CustomerList\n            customers={this.state.customers}\n            onSelect={this.handleSelect}\n          />\n        </div>\n        <div className=\"innerContainer\">\n          <CustomerDetail selectedCustomer={this.state.selectedCustomer} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Customer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div>Welcome to customer Module</div>\n        <div>\n          <Link to=\"/customer\">Customers</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <div>Sorry! but you are lost, click below to reach home </div>\n        <div>\n          <Link to=\"/\">Home</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Customer from \"./components/customer.jsx\";\nimport Home from \"./components/home.jsx\";\nimport NotFound from \"./components/notfound.jsx\";\nimport \"./css/reset.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route\n          path=\"/customer\"\n          render={(props) => <Customer additionalProps=\"addprop\" {...props} />}\n        />\n        <Route path=\"/not-found\" exact component={NotFound} />\n        <Route path=\"/\" exact component={Home} />\n        <Redirect to=\"/not-found\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App.js\";\n\nconsole.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nReactDom.render(\n  // for history object\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}